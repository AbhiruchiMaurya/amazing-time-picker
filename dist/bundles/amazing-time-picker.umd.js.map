{"version":3,"file":"amazing-time-picker.umd.js","sources":["~/amazing-time-picker/src/app/atp-library/atp-time-picker.module.ts","~/amazing-time-picker/src/app/atp-library/atp.directive.ts","~/amazing-time-picker/src/app/atp-library/atp-time-picker/atp-time-picker.component.ts","~/amazing-time-picker/src/app/atp-library/atp-time-picker.service.ts","~/amazing-time-picker/src/app/atp-library/time-picker/time-picker.component.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { AtpTimePickerComponent } from './atp-time-picker/atp-time-picker.component';\nimport { AmazingTimePickerService } from './atp-time-picker.service';\nimport { AtpDirective } from './atp.directive';\nexport class AmazingTimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TimePickerComponent,\n    AtpTimePickerComponent,\n    AtpDirective\n  ],\n  providers: [AmazingTimePickerService],\n  entryComponents: [TimePickerComponent],\n  exports: [\n    TimePickerComponent,\n    AtpTimePickerComponent,\n    AtpDirective\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AmazingTimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAmazingTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAmazingTimePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, Output, EventEmitter, HostListener } from '@angular/core';\nimport { AmazingTimePickerService } from './atp-time-picker.service';\nexport class AtpDirective {\n/**\n * @param {?} viewContainerRef\n * @param {?} atp\n */\nconstructor(\npublic viewContainerRef: ViewContainerRef,\nprivate atp: AmazingTimePickerService\n  ) {}\n\n   myClick = new EventEmitter();\n/**\n * @param {?} e\n * @return {?}\n */\nonClick(e) {\n    const /** @type {?} */ ele = this.viewContainerRef.element.nativeElement;\n    const /** @type {?} */ time = ele.getAttribute('value');\n    const /** @type {?} */ theme = ele.getAttribute('theme');\n    let /** @type {?} */ arrowStyle = ele.getAttribute('arrowStyle');\n    arrowStyle = (arrowStyle) ? JSON.parse(arrowStyle.replace(new RegExp('\\'', 'g'), '\"')) : '';\n    const /** @type {?} */ timePickerFunction = this.atp.open({time, theme, 'arrowStyle': arrowStyle});\n    timePickerFunction.afterClose().subscribe(retTime => {\n      ele.value = retTime;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[atp-time-picker]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: AmazingTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'myClick': [{ type: Output },],\n'onClick': [{ type: HostListener, args: ['click', ['$event'], ] },],\n};\n}\n\nfunction AtpDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAtpDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAtpDirective.ctorParameters;\n/** @type {?} */\nAtpDirective.propDecorators;\n/** @type {?} */\nAtpDirective.prototype.myClick;\n/** @type {?} */\nAtpDirective.prototype.viewContainerRef;\n/** @type {?} */\nAtpDirective.prototype.atp;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ViewChild, ViewContainerRef, Input, ElementRef, ComponentFactoryResolver, AfterViewInit } from '@angular/core';\nimport { TimePickerComponent } from '../time-picker/time-picker.component';\nimport { AmazingTimePickerService } from '../atp-time-picker.service';\nexport class AtpTimePickerComponent implements AfterViewInit {\n   container: ViewContainerRef;\nprivate _state = 'container';\nprivate _validStates: Array<string> = ['container', 'icon', 'input'];\npublic _icon = true;\npublic _disabled = false;\n/**\n * @param {?} value\n * @return {?}\n */\nset icon(value: string){\n    this._icon = value === 'true' ? true : false;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: string){\n    this._disabled = value === 'true' ? true : false;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset state(value: string) {\n    this._state = value;\n  }\n   value: string;\n   class: string;\n/**\n * @param {?} resolver\n * @param {?} _ref\n * @param {?} atp\n */\nconstructor(\nprivate resolver: ComponentFactoryResolver,\nprivate _ref: ElementRef,\nprivate atp: AmazingTimePickerService\n  ) {}\n/**\n * @return {?}\n */\nset() {\n    const /** @type {?} */ ele = this.container.element.nativeElement;\n    const /** @type {?} */ timePickerFunction = this.atp.open(ele.value);\n    timePickerFunction.afterClose().subscribe(retTime => {\n      ele.value = retTime;\n    });\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    const /** @type {?} */ targetAttr = this._state.toLowerCase();\n    if (this._validStates.indexOf(targetAttr) > -1) {\n      const /** @type {?} */ targets = this._ref.nativeElement.querySelectorAll('[data-target*=' + targetAttr + ']');\n      if (targets) {\n        let /** @type {?} */ target: any;\n        for (target of targets) {\n          target.addEventListener('click', e => {\n           this.set();\n          });\n        }\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'atp-time-picker',\n  template: `\n    <div class='atp-time-picker'>\n      <div class=\"icon-container\" data-target=\"container-icon\" >\n        <svg *ngIf=\"_icon\" style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n          <path fill=\"#000000\" d=\"M12,20A7,7 0 0,1 5,13A7,7 0 0,1 12,6A7,7 0 0,1 19,13A7,7 0 0,1 12,20M12,4A9,9 0 0,0 3,13A9,9 0 0,0 12,22A9,9 0 0,0 21,13A9,9 0 0,0 12,4M12.5,8H11V14L15.75,16.85L16.5,15.62L12.5,13.25V8M7.88,3.39L6.6,1.86L2,5.71L3.29,7.24L7.88,3.39M22,5.72L17.4,1.86L16.11,3.39L20.71,7.25L22,5.72Z\" />\n        </svg>\n        <ng-content select=\"i\"></ng-content>\n      </div>\n      <input type=\"time\" data-target=\"container-input\" value=\"{{value}}\" [disabled]=\"_disabled\"  #container>\n    </div>\n  `,\n  styles: [`\n    .atp-time-picker .icon-container {\n      display: inline-block;\n      margin-right: .2em; }\n      .atp-time-picker .icon-container svg {\n        cursor: pointer;\n        position: relative;\n        top: .5em; }\n      .atp-time-picker .icon-container /deep/ i {\n        cursor: pointer; }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: ElementRef, },\n{type: AmazingTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'container': [{ type: ViewChild, args: ['container', { read: ViewContainerRef }, ] },],\n'icon': [{ type: Input },],\n'disabled': [{ type: Input },],\n'state': [{ type: Input },],\n'value': [{ type: Input },],\n'class': [{ type: Input },],\n};\n}\n\nfunction AtpTimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nAtpTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAtpTimePickerComponent.ctorParameters;\n/** @type {?} */\nAtpTimePickerComponent.propDecorators;\n/** @type {?} */\nAtpTimePickerComponent.prototype.container;\n/** @type {?} */\nAtpTimePickerComponent.prototype._state;\n/** @type {?} */\nAtpTimePickerComponent.prototype._validStates;\n/** @type {?} */\nAtpTimePickerComponent.prototype._icon;\n/** @type {?} */\nAtpTimePickerComponent.prototype._disabled;\n/** @type {?} */\nAtpTimePickerComponent.prototype.value;\n/** @type {?} */\nAtpTimePickerComponent.prototype.class;\n/** @type {?} */\nAtpTimePickerComponent.prototype.resolver;\n/** @type {?} */\nAtpTimePickerComponent.prototype._ref;\n/** @type {?} */\nAtpTimePickerComponent.prototype.atp;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, ViewContainerRef, Injector, ApplicationRef, ComponentFactoryResolver, EmbeddedViewRef } from '@angular/core';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { TimePickerConfig, IDialogResult } from './definitions';\nimport { Observable } from 'rxjs/Rx';\nimport { Subject } from 'rxjs/Subject';\nexport class AmazingTimePickerService {\n/**\n * @param {?} resolver\n * @param {?} appRef\n * @param {?} injector\n */\nconstructor (\nprivate resolver: ComponentFactoryResolver,\nprivate appRef: ApplicationRef,\nprivate injector: Injector\n  ) {}\n/**\n * @param {?=} config\n * @return {?}\n */\nopen (config?: TimePickerConfig): IDialogResult {\n    const /** @type {?} */ _self = this;\n    config = config || {};\n    config = {\n      time: config.time || '00:00',\n      theme: ['light', 'dark'].indexOf(config.theme) > 0 ? config.theme : 'light' || config.theme || 'light',\n      arrowStyle: config.arrowStyle || {}\n    };\n    config.arrowStyle = {\n      background: (config.arrowStyle.background) ?\n      config.arrowStyle.background : config.theme !== undefined ?\n      config.theme === 'dark' ? 'rgb(128, 203, 196)' : 'blue' : 'blue',\n      color: config.arrowStyle.color || '#fff'\n    };\n    const /** @type {?} */ componentRef = this.resolver.resolveComponentFactory(TimePickerComponent);\n    const /** @type {?} */ tsc = componentRef.create(this.injector);\n    this.appRef.attachView(tsc.hostView);\n    const /** @type {?} */ domElem = /** @type {?} */(( ( /** @type {?} */((tsc.hostView as EmbeddedViewRef<any>))).rootNodes[0] as HTMLElement));\n    document.body.appendChild(domElem);\n    tsc.instance.subject = new Subject<any>();\n    tsc.instance._ref = tsc;\n    tsc.instance.appRef = this.appRef;\n    tsc.instance.timerElement = '';\n    tsc.instance.config = config;\n    tsc.instance.ParseStringToTime(config.time);\n    return {\n      afterClose: function () {\n        return tsc.instance.subject.asObservable();\n      }\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: ApplicationRef, },\n{type: Injector, },\n];\n}\n\nfunction AmazingTimePickerService_tsickle_Closure_declarations() {\n/** @type {?} */\nAmazingTimePickerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAmazingTimePickerService.ctorParameters;\n/** @type {?} */\nAmazingTimePickerService.prototype.resolver;\n/** @type {?} */\nAmazingTimePickerService.prototype.appRef;\n/** @type {?} */\nAmazingTimePickerService.prototype.injector;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nexport class TimePickerComponent implements OnInit {\n   selectedTime = new EventEmitter();\n\n  _ref: any;\npublic subject: any = null;\npublic activeModal = false;\npublic timerElement: any;\npublic clockObject: Array<any>;\npublic isClicked: boolean;\npublic clockType: String = 'hour';\npublic hour: any = 12;\npublic minute: any = 0;\npublic ampm: String = 'AM';\npublic nowTime: any = this.hour;\npublic degree: any;\npublic config: any;\npublic appRef: any;\n/**\n * @param {?} time\n * @return {?}\n */\npublic ParseStringToTime (time: string): void {\n    time = (time === '' || time === undefined || time === null) ? this.hour + ':' + this.minute : time;\n    const [h, m] = time.split(':');\n    let /** @type {?} */ hour = +h > 12 ? +h - 12 : +h;\n    hour = hour === 0 ? 12 : hour;\n    this.hour = hour;\n    this.minute = +m;\n    const /** @type {?} */ ampm = +h >= 12 ? 'PM' : 'AM';\n    this.ampm = ampm;\n  }\n/**\n * @return {?}\n */\npublic GetTime () {\n    let /** @type {?} */ hh = this.ampm === 'PM' ? +this.hour + 12 : +this.hour;\n    if (this.ampm === 'AM' && hh === 12) {\n      hh = 0;\n    }\n    if ( hh === 24) {\n      hh = 12;\n    }\n    hh = hh < 10 ? '0' + hh : /** @type {?} */(( '' + hh as any));\n    const /** @type {?} */ mm = this.minute < 10 ? '0' + this.minute : this.minute;\n    const /** @type {?} */ time = `${hh}:${mm}`;\n    this.selectedTime.emit(time);\n    this.subject.next(time);\n  }\n\n  clockMaker = () => {\n    const /** @type {?} */ type = this.clockType;\n    this.clockObject = [];\n    const /** @type {?} */ timeVal = (type === 'minute') ? 60 : 12;\n    const /** @type {?} */ timeStep = (type === 'minute') ? 5 : 1;\n    const /** @type {?} */ timeStart = (type === 'minute') ? 0 : 1;\n\n    const /** @type {?} */ r = 124;\n    const /** @type {?} */ j = r - 25;\n\n    for (let /** @type {?} */ min = timeStart; min <= timeVal; min += timeStep) {\n      if (min !== 60) {\n        const /** @type {?} */ str = String(min);\n        const /** @type {?} */ x = j * Math.sin(Math.PI * 2 * (min / timeVal));\n        const /** @type {?} */ y = j * Math.cos(Math.PI * 2 * (min / timeVal));\n\n        this.clockObject.push({\n          time: str,\n          left: (x + r - 17) + 'px',\n          top: (-y + r - 17) + 'px',\n          type\n        });\n      }\n    }\n    this.setArrow(null);\n  }\n\n  setActiveTime = () => {\n    this.nowTime = (this.clockType === 'minute' ? this.minute : this.hour);\n  }\n\n  setArrow = (obj: any) => {\n    if (obj) {\n      this.clockType = obj.type;\n      if (this.clockType === 'minute') {\n        this.minute = obj.time;\n      } else {\n        this.hour = obj.time;\n      }\n    }\n    const /** @type {?} */ step = (this.clockType === 'minute') ? 6 : 30;\n    const /** @type {?} */ time = (this.clockType === 'minute') ? this.minute : this.hour;\n    const /** @type {?} */ degrees = time * step;\n    this.rotationClass(degrees);\n    this.setActiveTime();\n  }\n\n  rotationClass = (degrees: any) => {\n    this.degree = degrees;\n  }\n\n  getDegree = (ele: any) => {\n    const /** @type {?} */ step = this.clockType === 'minute' ? 6 : 30;\n    const /** @type {?} */ parrentPos = ele.currentTarget.getBoundingClientRect();\n    if (this.isClicked && (ele.currentTarget === ele.target || ele.target.nodeName === 'BUTTON')) {\n      const /** @type {?} */ clock = {\n        width: ele.currentTarget.offsetWidth,\n        height: ele.currentTarget.offsetHeight\n      };\n      const /** @type {?} */ targetX = clock.width / 2;\n      const /** @type {?} */ targetY = clock.height / 2;\n      const /** @type {?} */ Vx = Math.round((ele.clientX - parrentPos.left) - targetX);\n      const /** @type {?} */ Vy = Math.round(targetY - (ele.clientY - parrentPos.top));\n      let /** @type {?} */ radians = -Math.atan2(Vy, Vx);\n      console.log(radians);\n      // if (radians < 0) {\n        radians += 2.5 * Math.PI;\n     // }\n\n      let /** @type {?} */ degrees = Math.round(radians * 180 / Math.PI);\n      console.log(degrees);\n      const /** @type {?} */ degMod = degrees % step;\n      if (degMod === 0) {\n        return;\n      } else if (degMod >= step / 2) {\n        degrees = degrees + (step - degMod);\n      } else if (degMod < step / 2) {\n        degrees = degrees - degMod;\n      }\n\n      this.rotationClass(degrees);\n\n      if (this.clockType === 'hour') {\n        this.hour = (degrees / step);\n        this.hour = (this.hour > 12) ? this.hour - 12 : this.hour;\n      } else if (this.clockType === 'minute') {\n        this.minute = (degrees / step);\n        this.minute = (this.minute > 59) ? this.minute - 60 : this.minute;\n      }\n      this.setActiveTime();\n    }\n  }\n/**\n * @return {?}\n */\nmodalAnimation() {\n    setTimeout(() => {\n      this.activeModal = true;\n    }, 1);\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.clockMaker();\n    this.modalAnimation();\n  }\n/**\n * @param {?} e\n * @return {?}\n */\nClose(e: any) {\n      if (e.target === e.currentTarget) {\n        this.activeModal = false;\n        setTimeout(() => {\n          this.appRef.detachView(this._ref.hostView);\n          this._ref.destroy();\n        }, 400);\n      }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'time-picker',\n  template: `\n    <div id=\"time-picker-wrapper\" class=\"{{config.theme}}\" [ngClass]=\"{'active': activeModal}\" (click)=\"Close($event);\">\n      <div id=\"time-picker\" [ngClass]=\"{'active': activeModal}\">\n        <div class=\"time-picker-header\">\n          <div class=\"time-picker-selected-time\">\n              <div class=\"time-picker-hour\" (click)=\"clockType='hour';clockMaker()\" [ngClass]=\"{'selected' : clockType == 'hour'}\">{{hour}}</div>\n              <span class=\"time-seprator\">:</span>\n              <div class=\"time-picker-minute\" (click)=\"clockType='minute';clockMaker()\" [ngClass]=\"{'selected' : clockType == 'minute'}\">{{minute}}</div>\n          </div>\n          <div class=\"time-picker-selected-ampm\">\n            <div class=\"time-picker-am\" (click)=\"ampm = 'AM';\" [ngClass]=\"{'selected' : ampm == 'AM'}\">AM</div>\n            <div class=\"time-picker-pm\" (click)=\"ampm = 'PM';\" [ngClass]=\"{'selected' : ampm == 'PM'}\">PM</div>\n          </div>\n        </div>\n        <div class=\"time-picker-content\">\n            <div class=\"time-picker-clock\" (mousemove)=\"getDegree($event);\" (mousedown)=\"isClicked = true;getDegree($event);\" (mouseup)=\"isClicked = false;\">\n              <button *ngFor=\"let clock of clockObject\" [ngClass]=\"{'active' : nowTime == clock.time}\" \n                [id]=\"'timepicker-item-id-' + clock.time\" \n                [ngStyle]=\"{top: clock.top,left: clock.left, color: nowTime == clock.time ? config.arrowStyle.color : config.theme == 'light' ? '#000' : '#eee', background: nowTime == clock.time ? config.arrowStyle.background : 'transparent'}\">\n                {{clock.time}}\n              </button>\n              <div class=\"time-picker-clock-origin\" [ngStyle]=\"{ background: config.arrowStyle.background}\"></div>\n              <div id=\"tpc-arrow\" class=\"time-picker-clock-arrow\" [ngStyle]=\"{transform: 'rotate(' + this.degree + 'deg)','-webkit-transform': 'rotate(' + this.degree + 'deg)', background: config.arrowStyle.background}\">\n                <span [ngStyle]=\"{ background: config.arrowStyle.background }\"></span>\n              </div>\n            </div>\n        </div>\n        <div class=\"time-picker-footer\">\n            <button (click)=\"Close($event);\">Cancel</button>\n            <button (click)=\"GetTime();Close($event);\" class=\"atp-ref-dialog-close\">OK</button>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    #time-picker-wrapper {\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      background: transparent;\n      -webkit-transition: background 0.4s;\n      transition: background 0.4s;\n      font-family: 'Roboto', sans-serif;\n      z-index: 1000; }\n      #time-picker-wrapper.active {\n        background: rgba(0, 0, 0, 0.3); }\n      #time-picker-wrapper.dark #time-picker {\n        background: #424242; }\n        #time-picker-wrapper.dark #time-picker .time-picker-header {\n          border-bottom: none;\n          background: #555555; }\n          #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-time {\n            color: #999; }\n            #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: #999; }\n            #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.dark #time-picker .time-picker-clock {\n          background: #555555; }\n        #time-picker-wrapper.dark #time-picker .time-picker-footer {\n          border-top: none; }\n          #time-picker-wrapper.dark #time-picker .time-picker-footer button {\n            background: #555555;\n            color: #fff; }\n            #time-picker-wrapper.dark #time-picker .time-picker-footer button:hover {\n              background: #777; }\n      #time-picker-wrapper.light #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.light #time-picker .time-picker-header {\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-time {\n            color: #aaa; }\n            #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #000; }\n          #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: #aaa; }\n            #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #000; }\n        #time-picker-wrapper.light #time-picker .time-picker-clock {\n          background: #ededed; }\n        #time-picker-wrapper.light #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.light #time-picker .time-picker-footer button {\n            background: #f1f1f1; }\n            #time-picker-wrapper.light #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper #time-picker {\n        width: 325px;\n        height: auto;\n        -webkit-box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n                box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n        border-radius: 2px;\n        margin: 15vh auto !important;\n        -webkit-transform: scale(0.5) !important;\n                transform: scale(0.5) !important;\n        -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;\n        transition: opacity 0.3s, -webkit-transform 0.3s;\n        transition: transform 0.3s, opacity 0.3s;\n        transition: transform 0.3s, opacity 0.3s, -webkit-transform 0.3s;\n        opacity: 0; }\n        #time-picker-wrapper #time-picker.active {\n          -webkit-transform: scale(1) !important;\n                  transform: scale(1) !important;\n          opacity: 1; }\n        #time-picker-wrapper #time-picker .time-picker-header {\n          text-align: center;\n          padding: 15px 0px; }\n          #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-time {\n            font-size: 35px;\n            padding: 5px 0px; }\n            #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-time div {\n              display: inline-block;\n              cursor: pointer; }\n          #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-ampm {\n            font-size: 18px; }\n            #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-ampm div {\n              display: inline-block;\n              padding: 0 5px;\n              cursor: pointer; }\n        #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock {\n          width: 200px;\n          height: 200px;\n          padding: 24px;\n          border-radius: 50%;\n          cursor: pointer;\n          margin: 25px auto;\n          position: relative;\n          user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          -webkit-user-select: none; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock button {\n            border: none;\n            background: transparent;\n            position: absolute;\n            width: 35px;\n            height: 35px;\n            border-radius: 50%;\n            cursor: pointer;\n            font-size: 17px;\n            text-align: center;\n            padding: 0;\n            -webkit-transition: all .2s;\n            transition: all .2s;\n            z-index: 3; }\n            #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock button:hover {\n              background: #fafafa; }\n            #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock button.active {\n              background: blue;\n              color: #fff; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-origin {\n            width: 6px;\n            height: 6px;\n            border-radius: 50%;\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            margin-left: -3px;\n            margin-top: -3px; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-arrow {\n            width: 2px;\n            height: 41%;\n            background: blue;\n            position: absolute;\n            left: 0;\n            top: 22px;\n            right: 0;\n            margin: auto;\n            -webkit-transform-origin: top left;\n            transform-origin: bottom; }\n            #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-arrow span {\n              width: 8px;\n              height: 8px;\n              border-radius: 50%;\n              position: absolute;\n              top: 0;\n              right: -3px; }\n        #time-picker-wrapper #time-picker .time-picker-footer {\n          padding: 15px;\n          text-align: right; }\n          #time-picker-wrapper #time-picker .time-picker-footer button {\n            border: transparent;\n            margin-left: 10px;\n            padding: 10px;\n            font-size: 14px;\n            border-radius: 2px;\n            cursor: pointer; }\n\n    * {\n      outline: none;\n      -webkit-box-sizing: content-box;\n              box-sizing: content-box; }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selectedTime': [{ type: Output },],\n};\n}\n\nfunction TimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimePickerComponent.ctorParameters;\n/** @type {?} */\nTimePickerComponent.propDecorators;\n/** @type {?} */\nTimePickerComponent.prototype.selectedTime;\n/** @type {?} */\nTimePickerComponent.prototype._ref;\n/** @type {?} */\nTimePickerComponent.prototype.subject;\n/** @type {?} */\nTimePickerComponent.prototype.activeModal;\n/** @type {?} */\nTimePickerComponent.prototype.timerElement;\n/** @type {?} */\nTimePickerComponent.prototype.clockObject;\n/** @type {?} */\nTimePickerComponent.prototype.isClicked;\n/** @type {?} */\nTimePickerComponent.prototype.clockType;\n/** @type {?} */\nTimePickerComponent.prototype.hour;\n/** @type {?} */\nTimePickerComponent.prototype.minute;\n/** @type {?} */\nTimePickerComponent.prototype.ampm;\n/** @type {?} */\nTimePickerComponent.prototype.nowTime;\n/** @type {?} */\nTimePickerComponent.prototype.degree;\n/** @type {?} */\nTimePickerComponent.prototype.config;\n/** @type {?} */\nTimePickerComponent.prototype.appRef;\n/** @type {?} */\nTimePickerComponent.prototype.clockMaker;\n/** @type {?} */\nTimePickerComponent.prototype.setActiveTime;\n/** @type {?} */\nTimePickerComponent.prototype.setArrow;\n/** @type {?} */\nTimePickerComponent.prototype.rotationClass;\n/** @type {?} */\nTimePickerComponent.prototype.getDegree;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["CommonModule","NgModule","HostListener","Output","ViewContainerRef","Directive","EventEmitter","Input","ViewChild","ElementRef","ComponentFactoryResolver","Component","Injector","ApplicationRef","Injectable","Subject"],"mappings":"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"}
