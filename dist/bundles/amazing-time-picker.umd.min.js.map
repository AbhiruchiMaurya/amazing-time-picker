{"version":3,"file":"amazing-time-picker.umd.min.js","sources":["~/amazing-time-picker/src/app/atp-library/time-picker/time-picker.component.ts","~/amazing-time-picker/src/app/atp-library/atp-time-picker.service.ts","~/amazing-time-picker/src/app/atp-library/atp-time-picker/atp-time-picker.component.ts","~/amazing-time-picker/src/app/atp-library/atp.directive.ts","~/amazing-time-picker/src/app/atp-library/atp-time-picker.module.ts"],"sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nexport class TimePickerComponent implements OnInit {\n   selectedTime = new EventEmitter();\n\n  _ref: any;\npublic subject: any = null;\npublic activeModal = false;\npublic timerElement: any;\npublic clockObject: Array<any>;\npublic isClicked: boolean;\npublic clockType: String = 'hour';\npublic hour: any = 12;\npublic minute: any = 0;\npublic ampm: String = 'AM';\npublic nowTime: any = this.hour;\npublic degree: any;\npublic config: any;\npublic appRef: any;\n/**\n * @param {?} time\n * @return {?}\n */\npublic ParseStringToTime (time: string): void {\n    time = (time === '' || time === undefined || time === null) ? this.hour + ':' + this.minute : time;\n    const [h, m] = time.split(':');\n    let /** @type {?} */ hour = +h > 12 ? +h - 12 : +h;\n    hour = hour === 0 ? 12 : hour;\n    this.hour = hour;\n    this.minute = +m;\n    const /** @type {?} */ ampm = +h >= 12 ? 'PM' : 'AM';\n    this.ampm = ampm;\n  }\n/**\n * @return {?}\n */\npublic GetTime () {\n    let /** @type {?} */ hh = this.ampm === 'PM' ? +this.hour + 12 : +this.hour;\n    if (this.ampm === 'AM' && hh === 12) {\n      hh = 0;\n    }\n    if ( hh === 24) {\n      hh = 12;\n    }\n    hh = hh < 10 ? '0' + hh : /** @type {?} */(( '' + hh as any));\n    const /** @type {?} */ mm = this.minute < 10 ? '0' + this.minute : this.minute;\n    const /** @type {?} */ time = `${hh}:${mm}`;\n    this.selectedTime.emit(time);\n    this.subject.next(time);\n  }\n\n  clockMaker = () => {\n    const /** @type {?} */ type = this.clockType;\n    this.clockObject = [];\n    const /** @type {?} */ timeVal = (type === 'minute') ? 60 : 12;\n    const /** @type {?} */ timeStep = (type === 'minute') ? 5 : 1;\n    const /** @type {?} */ timeStart = (type === 'minute') ? 0 : 1;\n\n    const /** @type {?} */ r = 124;\n    const /** @type {?} */ j = r - 25;\n\n    for (let /** @type {?} */ min = timeStart; min <= timeVal; min += timeStep) {\n      if (min !== 60) {\n        const /** @type {?} */ str = String(min);\n        const /** @type {?} */ x = j * Math.sin(Math.PI * 2 * (min / timeVal));\n        const /** @type {?} */ y = j * Math.cos(Math.PI * 2 * (min / timeVal));\n\n        this.clockObject.push({\n          time: str,\n          left: (x + r - 17) + 'px',\n          top: (-y + r - 17) + 'px',\n          type\n        });\n      }\n    }\n    this.setArrow(null);\n  }\n\n  setActiveTime = () => {\n    this.nowTime = (this.clockType === 'minute' ? this.minute : this.hour);\n  }\n\n  setArrow = (obj: any) => {\n    if (obj) {\n      this.clockType = obj.type;\n      if (this.clockType === 'minute') {\n        this.minute = obj.time;\n      } else {\n        this.hour = obj.time;\n      }\n    }\n    const /** @type {?} */ step = (this.clockType === 'minute') ? 6 : 30;\n    const /** @type {?} */ time = (this.clockType === 'minute') ? this.minute : this.hour;\n    const /** @type {?} */ degrees = time * step;\n    this.rotationClass(degrees);\n    this.setActiveTime();\n  }\n\n  rotationClass = (degrees: any) => {\n    this.degree = degrees;\n  }\n\n  getDegree = (ele: any) => {\n    const /** @type {?} */ step = this.clockType === 'minute' ? 6 : 30;\n    const /** @type {?} */ parrentPos = ele.currentTarget.getBoundingClientRect();\n    if (this.isClicked && (ele.currentTarget === ele.target || ele.target.nodeName === 'BUTTON')) {\n      const /** @type {?} */ clock = {\n        width: ele.currentTarget.offsetWidth,\n        height: ele.currentTarget.offsetHeight\n      };\n      const /** @type {?} */ targetX = clock.width / 2;\n      const /** @type {?} */ targetY = clock.height / 2;\n      const /** @type {?} */ Vx = Math.round((ele.clientX - parrentPos.left) - targetX);\n      const /** @type {?} */ Vy = Math.round(targetY - (ele.clientY - parrentPos.top));\n      let /** @type {?} */ radians = -Math.atan2(Vy, Vx);\n      console.log(radians);\n      // if (radians < 0) {\n        radians += 2.5 * Math.PI;\n     // }\n\n      let /** @type {?} */ degrees = Math.round(radians * 180 / Math.PI);\n      console.log(degrees);\n      const /** @type {?} */ degMod = degrees % step;\n      if (degMod === 0) {\n        return;\n      } else if (degMod >= step / 2) {\n        degrees = degrees + (step - degMod);\n      } else if (degMod < step / 2) {\n        degrees = degrees - degMod;\n      }\n\n      this.rotationClass(degrees);\n\n      if (this.clockType === 'hour') {\n        this.hour = (degrees / step);\n        this.hour = (this.hour > 12) ? this.hour - 12 : this.hour;\n      } else if (this.clockType === 'minute') {\n        this.minute = (degrees / step);\n        this.minute = (this.minute > 59) ? this.minute - 60 : this.minute;\n      }\n      this.setActiveTime();\n    }\n  }\n/**\n * @return {?}\n */\nmodalAnimation() {\n    setTimeout(() => {\n      this.activeModal = true;\n    }, 1);\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.clockMaker();\n    this.modalAnimation();\n  }\n/**\n * @param {?} e\n * @return {?}\n */\nClose(e: any) {\n      if (e.target === e.currentTarget) {\n        this.activeModal = false;\n        setTimeout(() => {\n          this.appRef.detachView(this._ref.hostView);\n          this._ref.destroy();\n        }, 400);\n      }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'time-picker',\n  template: `\n    <div id=\"time-picker-wrapper\" class=\"{{config.theme}}\" [ngClass]=\"{'active': activeModal}\" (click)=\"Close($event);\">\n      <div id=\"time-picker\" [ngClass]=\"{'active': activeModal}\">\n        <div class=\"time-picker-header\">\n          <div class=\"time-picker-selected-time\">\n              <div class=\"time-picker-hour\" (click)=\"clockType='hour';clockMaker()\" [ngClass]=\"{'selected' : clockType == 'hour'}\">{{hour}}</div>\n              <span class=\"time-seprator\">:</span>\n              <div class=\"time-picker-minute\" (click)=\"clockType='minute';clockMaker()\" [ngClass]=\"{'selected' : clockType == 'minute'}\">{{minute}}</div>\n          </div>\n          <div class=\"time-picker-selected-ampm\">\n            <div class=\"time-picker-am\" (click)=\"ampm = 'AM';\" [ngClass]=\"{'selected' : ampm == 'AM'}\">AM</div>\n            <div class=\"time-picker-pm\" (click)=\"ampm = 'PM';\" [ngClass]=\"{'selected' : ampm == 'PM'}\">PM</div>\n          </div>\n        </div>\n        <div class=\"time-picker-content\">\n            <div class=\"time-picker-clock\" (mousemove)=\"getDegree($event);\" (mousedown)=\"isClicked = true;getDegree($event);\" (mouseup)=\"isClicked = false;\">\n              <button *ngFor=\"let clock of clockObject\" [ngClass]=\"{'active' : nowTime == clock.time}\" \n                [id]=\"'timepicker-item-id-' + clock.time\" \n                [ngStyle]=\"{top: clock.top,left: clock.left, color: nowTime == clock.time ? config.arrowStyle.color : config.theme == 'light' ? '#000' : '#eee', background: nowTime == clock.time ? config.arrowStyle.background : 'transparent'}\">\n                {{clock.time}}\n              </button>\n              <div class=\"time-picker-clock-origin\" [ngStyle]=\"{ background: config.arrowStyle.background}\"></div>\n              <div id=\"tpc-arrow\" class=\"time-picker-clock-arrow\" [ngStyle]=\"{transform: 'rotate(' + this.degree + 'deg)','-webkit-transform': 'rotate(' + this.degree + 'deg)', background: config.arrowStyle.background}\">\n                <span [ngStyle]=\"{ background: config.arrowStyle.background }\"></span>\n              </div>\n            </div>\n        </div>\n        <div class=\"time-picker-footer\">\n            <button (click)=\"Close($event);\">Cancel</button>\n            <button (click)=\"GetTime();Close($event);\" class=\"atp-ref-dialog-close\">OK</button>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    #time-picker-wrapper {\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      background: transparent;\n      -webkit-transition: background 0.4s;\n      transition: background 0.4s;\n      font-family: 'Roboto', sans-serif;\n      z-index: 1000; }\n      #time-picker-wrapper.active {\n        background: rgba(0, 0, 0, 0.3); }\n      #time-picker-wrapper.dark #time-picker {\n        background: #424242; }\n        #time-picker-wrapper.dark #time-picker .time-picker-header {\n          border-bottom: none;\n          background: #555555; }\n          #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-time {\n            color: #999; }\n            #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #fff; }\n          #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: #999; }\n            #time-picker-wrapper.dark #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #fff; }\n        #time-picker-wrapper.dark #time-picker .time-picker-clock {\n          background: #555555; }\n        #time-picker-wrapper.dark #time-picker .time-picker-footer {\n          border-top: none; }\n          #time-picker-wrapper.dark #time-picker .time-picker-footer button {\n            background: #555555;\n            color: #fff; }\n            #time-picker-wrapper.dark #time-picker .time-picker-footer button:hover {\n              background: #777; }\n      #time-picker-wrapper.light #time-picker {\n        background: #fff; }\n        #time-picker-wrapper.light #time-picker .time-picker-header {\n          border-bottom: 1px solid #e1e1e1; }\n          #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-time {\n            color: #aaa; }\n            #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-time div.selected {\n              color: #000; }\n          #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-ampm {\n            color: #aaa; }\n            #time-picker-wrapper.light #time-picker .time-picker-header .time-picker-selected-ampm div.selected {\n              color: #000; }\n        #time-picker-wrapper.light #time-picker .time-picker-clock {\n          background: #ededed; }\n        #time-picker-wrapper.light #time-picker .time-picker-footer {\n          border-top: 1px solid #e1e1e1; }\n          #time-picker-wrapper.light #time-picker .time-picker-footer button {\n            background: #f1f1f1; }\n            #time-picker-wrapper.light #time-picker .time-picker-footer button:hover {\n              background: #ddd; }\n      #time-picker-wrapper #time-picker {\n        width: 325px;\n        height: auto;\n        -webkit-box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n                box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n        border-radius: 2px;\n        margin: 15vh auto !important;\n        -webkit-transform: scale(0.5) !important;\n                transform: scale(0.5) !important;\n        -webkit-transition: opacity 0.3s, -webkit-transform 0.3s;\n        transition: opacity 0.3s, -webkit-transform 0.3s;\n        transition: transform 0.3s, opacity 0.3s;\n        transition: transform 0.3s, opacity 0.3s, -webkit-transform 0.3s;\n        opacity: 0; }\n        #time-picker-wrapper #time-picker.active {\n          -webkit-transform: scale(1) !important;\n                  transform: scale(1) !important;\n          opacity: 1; }\n        #time-picker-wrapper #time-picker .time-picker-header {\n          text-align: center;\n          padding: 15px 0px; }\n          #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-time {\n            font-size: 35px;\n            padding: 5px 0px; }\n            #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-time div {\n              display: inline-block;\n              cursor: pointer; }\n          #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-ampm {\n            font-size: 18px; }\n            #time-picker-wrapper #time-picker .time-picker-header .time-picker-selected-ampm div {\n              display: inline-block;\n              padding: 0 5px;\n              cursor: pointer; }\n        #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock {\n          width: 200px;\n          height: 200px;\n          padding: 24px;\n          border-radius: 50%;\n          cursor: pointer;\n          margin: 25px auto;\n          position: relative;\n          user-select: none;\n          -moz-user-select: none;\n          -ms-user-select: none;\n          -webkit-user-select: none; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock button {\n            border: none;\n            background: transparent;\n            position: absolute;\n            width: 35px;\n            height: 35px;\n            border-radius: 50%;\n            cursor: pointer;\n            font-size: 17px;\n            text-align: center;\n            padding: 0;\n            -webkit-transition: all .2s;\n            transition: all .2s;\n            z-index: 3; }\n            #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock button:hover {\n              background: #fafafa; }\n            #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock button.active {\n              background: blue;\n              color: #fff; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-origin {\n            width: 6px;\n            height: 6px;\n            border-radius: 50%;\n            position: absolute;\n            left: 50%;\n            top: 50%;\n            margin-left: -3px;\n            margin-top: -3px; }\n          #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-arrow {\n            width: 2px;\n            height: 41%;\n            background: blue;\n            position: absolute;\n            left: 0;\n            top: 22px;\n            right: 0;\n            margin: auto;\n            -webkit-transform-origin: top left;\n            transform-origin: bottom; }\n            #time-picker-wrapper #time-picker .time-picker-content .time-picker-clock .time-picker-clock-arrow span {\n              width: 8px;\n              height: 8px;\n              border-radius: 50%;\n              position: absolute;\n              top: 0;\n              right: -3px; }\n        #time-picker-wrapper #time-picker .time-picker-footer {\n          padding: 15px;\n          text-align: right; }\n          #time-picker-wrapper #time-picker .time-picker-footer button {\n            border: transparent;\n            margin-left: 10px;\n            padding: 10px;\n            font-size: 14px;\n            border-radius: 2px;\n            cursor: pointer; }\n\n    * {\n      outline: none;\n      -webkit-box-sizing: content-box;\n              box-sizing: content-box; }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selectedTime': [{ type: Output },],\n};\n}\n\nfunction TimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTimePickerComponent.ctorParameters;\n/** @type {?} */\nTimePickerComponent.propDecorators;\n/** @type {?} */\nTimePickerComponent.prototype.selectedTime;\n/** @type {?} */\nTimePickerComponent.prototype._ref;\n/** @type {?} */\nTimePickerComponent.prototype.subject;\n/** @type {?} */\nTimePickerComponent.prototype.activeModal;\n/** @type {?} */\nTimePickerComponent.prototype.timerElement;\n/** @type {?} */\nTimePickerComponent.prototype.clockObject;\n/** @type {?} */\nTimePickerComponent.prototype.isClicked;\n/** @type {?} */\nTimePickerComponent.prototype.clockType;\n/** @type {?} */\nTimePickerComponent.prototype.hour;\n/** @type {?} */\nTimePickerComponent.prototype.minute;\n/** @type {?} */\nTimePickerComponent.prototype.ampm;\n/** @type {?} */\nTimePickerComponent.prototype.nowTime;\n/** @type {?} */\nTimePickerComponent.prototype.degree;\n/** @type {?} */\nTimePickerComponent.prototype.config;\n/** @type {?} */\nTimePickerComponent.prototype.appRef;\n/** @type {?} */\nTimePickerComponent.prototype.clockMaker;\n/** @type {?} */\nTimePickerComponent.prototype.setActiveTime;\n/** @type {?} */\nTimePickerComponent.prototype.setArrow;\n/** @type {?} */\nTimePickerComponent.prototype.rotationClass;\n/** @type {?} */\nTimePickerComponent.prototype.getDegree;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, ViewContainerRef, Injector, ApplicationRef, ComponentFactoryResolver, EmbeddedViewRef } from '@angular/core';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { TimePickerConfig, IDialogResult } from './definitions';\nimport { Observable } from 'rxjs/Rx';\nimport { Subject } from 'rxjs/Subject';\nexport class AmazingTimePickerService {\n/**\n * @param {?} resolver\n * @param {?} appRef\n * @param {?} injector\n */\nconstructor (\nprivate resolver: ComponentFactoryResolver,\nprivate appRef: ApplicationRef,\nprivate injector: Injector\n  ) {}\n/**\n * @param {?=} config\n * @return {?}\n */\nopen (config?: TimePickerConfig): IDialogResult {\n    const /** @type {?} */ _self = this;\n    config = config || {};\n    config = {\n      time: config.time || '00:00',\n      theme: ['light', 'dark'].indexOf(config.theme) > 0 ? config.theme : 'light' || config.theme || 'light',\n      arrowStyle: config.arrowStyle || {}\n    };\n    config.arrowStyle = {\n      background: (config.arrowStyle.background) ?\n      config.arrowStyle.background : config.theme !== undefined ?\n      config.theme === 'dark' ? 'rgb(128, 203, 196)' : 'blue' : 'blue',\n      color: config.arrowStyle.color || '#fff'\n    };\n    const /** @type {?} */ componentRef = this.resolver.resolveComponentFactory(TimePickerComponent);\n    const /** @type {?} */ tsc = componentRef.create(this.injector);\n    this.appRef.attachView(tsc.hostView);\n    const /** @type {?} */ domElem = /** @type {?} */(( ( /** @type {?} */((tsc.hostView as EmbeddedViewRef<any>))).rootNodes[0] as HTMLElement));\n    document.body.appendChild(domElem);\n    tsc.instance.subject = new Subject<any>();\n    tsc.instance._ref = tsc;\n    tsc.instance.appRef = this.appRef;\n    tsc.instance.timerElement = '';\n    tsc.instance.config = config;\n    tsc.instance.ParseStringToTime(config.time);\n    return {\n      afterClose: function () {\n        return tsc.instance.subject.asObservable();\n      }\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: ApplicationRef, },\n{type: Injector, },\n];\n}\n\nfunction AmazingTimePickerService_tsickle_Closure_declarations() {\n/** @type {?} */\nAmazingTimePickerService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAmazingTimePickerService.ctorParameters;\n/** @type {?} */\nAmazingTimePickerService.prototype.resolver;\n/** @type {?} */\nAmazingTimePickerService.prototype.appRef;\n/** @type {?} */\nAmazingTimePickerService.prototype.injector;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ViewChild, ViewContainerRef, Input, ElementRef, ComponentFactoryResolver, AfterViewInit } from '@angular/core';\nimport { TimePickerComponent } from '../time-picker/time-picker.component';\nimport { AmazingTimePickerService } from '../atp-time-picker.service';\nexport class AtpTimePickerComponent implements AfterViewInit {\n   container: ViewContainerRef;\nprivate _state = 'container';\nprivate _validStates: Array<string> = ['container', 'icon', 'input'];\npublic _icon = true;\npublic _disabled = false;\n/**\n * @param {?} value\n * @return {?}\n */\nset icon(value: string){\n    this._icon = value === 'true' ? true : false;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: string){\n    this._disabled = value === 'true' ? true : false;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset state(value: string) {\n    this._state = value;\n  }\n   value: string;\n   class: string;\n/**\n * @param {?} resolver\n * @param {?} _ref\n * @param {?} atp\n */\nconstructor(\nprivate resolver: ComponentFactoryResolver,\nprivate _ref: ElementRef,\nprivate atp: AmazingTimePickerService\n  ) {}\n/**\n * @return {?}\n */\nset() {\n    const /** @type {?} */ ele = this.container.element.nativeElement;\n    const /** @type {?} */ timePickerFunction = this.atp.open(ele.value);\n    timePickerFunction.afterClose().subscribe(retTime => {\n      ele.value = retTime;\n    });\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    const /** @type {?} */ targetAttr = this._state.toLowerCase();\n    if (this._validStates.indexOf(targetAttr) > -1) {\n      const /** @type {?} */ targets = this._ref.nativeElement.querySelectorAll('[data-target*=' + targetAttr + ']');\n      if (targets) {\n        let /** @type {?} */ target: any;\n        for (target of targets) {\n          target.addEventListener('click', e => {\n           this.set();\n          });\n        }\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'atp-time-picker',\n  template: `\n    <div class='atp-time-picker'>\n      <div class=\"icon-container\" data-target=\"container-icon\" >\n        <svg *ngIf=\"_icon\" style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n          <path fill=\"#000000\" d=\"M12,20A7,7 0 0,1 5,13A7,7 0 0,1 12,6A7,7 0 0,1 19,13A7,7 0 0,1 12,20M12,4A9,9 0 0,0 3,13A9,9 0 0,0 12,22A9,9 0 0,0 21,13A9,9 0 0,0 12,4M12.5,8H11V14L15.75,16.85L16.5,15.62L12.5,13.25V8M7.88,3.39L6.6,1.86L2,5.71L3.29,7.24L7.88,3.39M22,5.72L17.4,1.86L16.11,3.39L20.71,7.25L22,5.72Z\" />\n        </svg>\n        <ng-content select=\"i\"></ng-content>\n      </div>\n      <input type=\"time\" data-target=\"container-input\" value=\"{{value}}\" [disabled]=\"_disabled\"  #container>\n    </div>\n  `,\n  styles: [`\n    .atp-time-picker .icon-container {\n      display: inline-block;\n      margin-right: .2em; }\n      .atp-time-picker .icon-container svg {\n        cursor: pointer;\n        position: relative;\n        top: .5em; }\n      .atp-time-picker .icon-container /deep/ i {\n        cursor: pointer; }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: ElementRef, },\n{type: AmazingTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'container': [{ type: ViewChild, args: ['container', { read: ViewContainerRef }, ] },],\n'icon': [{ type: Input },],\n'disabled': [{ type: Input },],\n'state': [{ type: Input },],\n'value': [{ type: Input },],\n'class': [{ type: Input },],\n};\n}\n\nfunction AtpTimePickerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nAtpTimePickerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAtpTimePickerComponent.ctorParameters;\n/** @type {?} */\nAtpTimePickerComponent.propDecorators;\n/** @type {?} */\nAtpTimePickerComponent.prototype.container;\n/** @type {?} */\nAtpTimePickerComponent.prototype._state;\n/** @type {?} */\nAtpTimePickerComponent.prototype._validStates;\n/** @type {?} */\nAtpTimePickerComponent.prototype._icon;\n/** @type {?} */\nAtpTimePickerComponent.prototype._disabled;\n/** @type {?} */\nAtpTimePickerComponent.prototype.value;\n/** @type {?} */\nAtpTimePickerComponent.prototype.class;\n/** @type {?} */\nAtpTimePickerComponent.prototype.resolver;\n/** @type {?} */\nAtpTimePickerComponent.prototype._ref;\n/** @type {?} */\nAtpTimePickerComponent.prototype.atp;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, Output, EventEmitter, HostListener } from '@angular/core';\nimport { AmazingTimePickerService } from './atp-time-picker.service';\nexport class AtpDirective {\n/**\n * @param {?} viewContainerRef\n * @param {?} atp\n */\nconstructor(\npublic viewContainerRef: ViewContainerRef,\nprivate atp: AmazingTimePickerService\n  ) {}\n\n   myClick = new EventEmitter();\n/**\n * @param {?} e\n * @return {?}\n */\nonClick(e) {\n    const /** @type {?} */ ele = this.viewContainerRef.element.nativeElement;\n    const /** @type {?} */ time = ele.getAttribute('value');\n    const /** @type {?} */ theme = ele.getAttribute('theme');\n    let /** @type {?} */ arrowStyle = ele.getAttribute('arrowStyle');\n    arrowStyle = (arrowStyle) ? JSON.parse(arrowStyle.replace(new RegExp('\\'', 'g'), '\"')) : '';\n    const /** @type {?} */ timePickerFunction = this.atp.open({time, theme, 'arrowStyle': arrowStyle});\n    timePickerFunction.afterClose().subscribe(retTime => {\n      ele.value = retTime;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[atp-time-picker]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: AmazingTimePickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'myClick': [{ type: Output },],\n'onClick': [{ type: HostListener, args: ['click', ['$event'], ] },],\n};\n}\n\nfunction AtpDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAtpDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAtpDirective.ctorParameters;\n/** @type {?} */\nAtpDirective.propDecorators;\n/** @type {?} */\nAtpDirective.prototype.myClick;\n/** @type {?} */\nAtpDirective.prototype.viewContainerRef;\n/** @type {?} */\nAtpDirective.prototype.atp;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { AtpTimePickerComponent } from './atp-time-picker/atp-time-picker.component';\nimport { AmazingTimePickerService } from './atp-time-picker.service';\nimport { AtpDirective } from './atp.directive';\nexport class AmazingTimePickerModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n  ],\n  declarations: [\n    TimePickerComponent,\n    AtpTimePickerComponent,\n    AtpDirective\n  ],\n  providers: [AmazingTimePickerService],\n  entryComponents: [TimePickerComponent],\n  exports: [\n    TimePickerComponent,\n    AtpTimePickerComponent,\n    AtpDirective\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AmazingTimePickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAmazingTimePickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAmazingTimePickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["TimePickerComponent","_this","this","selectedTime","EventEmitter","subject","activeModal","clockType","hour","minute","ampm","nowTime","clockMaker","type","clockObject","timeVal","timeStep","min","str","String","x","r","Math","sin","PI","y","cos","push","time","left","top","setArrow","setActiveTime","obj","step","degrees","rotationClass","degree","getDegree","ele","parrentPos","currentTarget","getBoundingClientRect","isClicked","target","nodeName","targetX","offsetWidth","targetY","offsetHeight","Vx","round","clientX","Vy","clientY","radians","atan2","console","log","degMod","prototype","ParseStringToTime","_a","undefined","split","h","m","GetTime","hh","emit","next","modalAnimation","setTimeout","ngOnInit","Close","e","appRef","detachView","_ref","hostView","destroy","decorators","Component","args","selector","template","styles","ctorParameters","propDecorators","Output","AmazingTimePickerService","resolver","injector","open","config","theme","indexOf","arrowStyle","background","color","tsc","resolveComponentFactory","create","attachView","domElem","rootNodes","document","body","appendChild","instance","Subject","timerElement","afterClose","asObservable","Injectable","ComponentFactoryResolver","ApplicationRef","Injector","AtpTimePickerComponent","atp","_state","_validStates","_icon","_disabled","Object","defineProperty","set","value","container","element","nativeElement","subscribe","retTime","ngAfterViewInit","targetAttr","toLowerCase","targets","querySelectorAll","_i","targets_1","length","addEventListener","ElementRef","ViewChild","read","ViewContainerRef","icon","Input","disabled","state","class","AtpDirective","viewContainerRef","myClick","onClick","getAttribute","JSON","parse","replace","RegExp","Directive","HostListener","AmazingTimePickerModule","NgModule","imports","CommonModule","declarations","providers","entryComponents","exports"],"mappings":"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"}
